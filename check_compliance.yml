---
- name: Scan for compliance 
  hosts: tag_compliance
  gather_facts: false
  tasks:
    - name: Install latest nuget (required for DSC Resource Kit)
      win_shell: install-packageprovider -name nuget -force

    - name: Install CISDSC PS Module 
      win_psmodule:
        name: CISDSC
        state: present 

    - name: Setup DSC Local Configuration Manager
      ansible.builtin.win_shell: |
        [DscLocalConfigurationManager()]
        Configuration LCMSettings {
            Node localhost
            {
                Settings
                {
                    RefreshMode = “Push”
                    ConfigurationMode = 'ApplyOnly'
                }
            }
        }
        LCMSettings
        Set-DscLocalConfigurationManager -Path .\LCMSettings -Verbose
        Set-Item -Path 'WSMan:\localhost\MaxEnvelopeSizeKb' -Value 8192
      args:
        chdir: c:\users\administrator
      become: true

    - name: Apply CIS DSC 
      win_dsc:
        resource_name: CIS_Microsoft_Windows_Server_2019_Member_Server_Release_1809
        ExcludeList:
          - 1.1.1 # Enforce password history
          - 1.1.2 # Maximum password age
          - 1.1.3 # Minimum password age
          - 1.1.4 # Minimum password length
          - 1.1.5 # Enforce complexity requirements
          - 1.2.1 # Account lockout duration
          - 1.2.2 # Account lockout threshold
          - 1.2.3 # Reset account lockout counter
          - 2.3.15 # Rename administrator account
        2316AccountsRenameguestaccount: CISGuest
      register: compliance 

    - name: print compliance 
      debug:
        var: compliance 

    # - name: GATHER THE CURRENT BANNER ON THE DEVICE
    #   ios_command:
    #     commands:
    #       - show banner login
    #   register: banner

    # - name: VISUAL OUTPUT
    #   debug:
    #     var: banner.stdout[0]
    #   when: not banner.stdout[0]

    # - name: OPEN AN INCIDENT (SERVICENOW) IF NO BANNER IS CONFIGURED
    #   block:
    #     - name: CREATE AN INCIDENT
    #       snow_record:
    #         username: "{{ SN_USERNAME }}"
    #         password: "{{ SN_PASSWORD }}"
    #         instance: "{{ SN_INSTANCE }}"
    #         state: present
    #         table: incident
    #         data:
    #           short_description: "BANNER MISSING ON {{inventory_hostname}}"
    #           severity: 3
    #           priority: 2
    #           caller_id: "System Administrator"
    #           comments: "The login banner is missing on {{inventory_hostname}}"
    #       register: snow_var
    #       delegate_to: localhost

    #     - name: VISUAL OUTPUT OF INCIDENT NUMBER
    #       debug:
    #         var: snow_var.record.number
    #   when: not banner.stdout[0]
